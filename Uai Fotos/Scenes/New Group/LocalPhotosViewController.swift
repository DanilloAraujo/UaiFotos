//
//  LocalPhotosViewController.swift
//  Uai Fotos
//
//  Created by Aloc SP08608 on 13/12/2017.
//  Copyright (c) 2017 Uai Fotos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import MapKit

protocol LocalPhotosDisplayLogic: class {
    func displaySomething(viewModel: LocalPhotos.Something.ViewModel)
}


class LocalPhotosViewController: UIViewController, LocalPhotosDisplayLogic {
    var interactor: LocalPhotosBusinessLogic?
    var router: (NSObjectProtocol & LocalPhotosRoutingLogic & LocalPhotosDataPassing)?
    
    @IBOutlet weak var mapView: MKMapView!
    
//    var coordinate: CLLocationCoordinate2D?
    var location: MKPointAnnotation?
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = LocalPhotosInteractor()
        let presenter = LocalPhotosPresenter()
        let router = LocalPhotosRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.mapView.userTrackingMode = .follow
        self.mapView.delegate = self
        self.mapView.showsUserLocation = true
        
        
        doSomething()
        
        
        
    }
    
    override func viewDidAppear(_ animated: Bool) {
        showLocation()
    }
    
    func showLocation() {
        if let loc = self.location {
            
            self.mapView.showAnnotations([loc], animated: true)
            /*
            let span = MKCoordinateSpan(latitudeDelta: 0.001, longitudeDelta: 0.001)
            var region = MKCoordinateRegion(center: loc.coordinate, span: span)
            region.center = self.mapView.userLocation.coordinate
            self.mapView.setRegion(region, animated: true)
            */
        }
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething() {
        let request = LocalPhotos.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: LocalPhotos.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}

extension LocalPhotosViewController: MKMapViewDelegate {
    
}

